name: orders
type: resource.web.app
description: A microservice for placing boat tour orders
provides:
  - type: service.web.app
    name: ordersms
    description: A microservice to manage order details
    params:
      - name: orders_endpoint
        value: /orders
      - name: port
        formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.orders_port.Value}}{{end}}'
      - name: imageName
        formula: '{{with(index .Needs "service.container.registry:imageRegistry")}}{{.Params.endpoint.Value}}{{end}}{{.Component.Name}}'
      - name: image.tag
        value: 'latest'
uses:
  - type: environment
    name: default
    params:
      - name: DB_PORT
        formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_port.Value}}{{end}}'
      - name: DB_NAME
        formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_name.Value}}{{end}}'
      - name: DB_HOST
        formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_host.Value}}{{end}}'
      - name: MY_PORT
        formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.orders_port.Value}}{{end}}'
  - type: secret
    name: databaseCredentials
    params:
      - name: DB_USER
        formula: '{{with(index .Needs "environment.secret:databaseCredentials")}}{{.Params.db_username.Name}}{{end}}'
      - name: DB_PW
        formula: '{{with(index .Needs "environment.secret:databaseCredentials")}}{{.Params.db_password.Name}}{{end}}'

needs:
  - type: service.db.postgres
    name: ordersdb
    description: Back-end database
    params:
      - name: db_port
        required: true
      - name: db_name
        required: true
      - name: db_host
        required: true
  - type: environment.properties
    name: appEnvProps
    description: Application properties
    params:
      - name: orders_port
        required: true
  - type: service.container.registry
    name: imageRegistry
    params:
      - name: endpoint
        required: true
  - type: environment.secret
    name: databaseCredentials
    description: Credentials for accessing the database
    params:
      - name: db_username
        required: true
      - name: db_password
        required: true

